What is an array in DSA?

An array is a linear data structure that collects elements of the same data type and stores them in contiguous and adjacent memory locations.

what is Searching in dsa?

The process of finding the desired information from the set of items stored in the form of elements in the computer memory.

What does sorting mean DSA?

The arrangement of data in a preferred order is called sorting in
the data structure. 

What is a Linked List?
A Linked List is a linear data structure which looks like a chain of nodes, where each node is a different element. Unlike Arrays,
Linked List elements are not stored at a contiguous location. 

What is Doubly Linked List?
A doubly linked list (DLL) is a special type of linked list in which each node contains a pointer to
the previous node as well as the next node of the linked list.

What is Stack?
Stack is a linear data structure that follows a particular order in which the operations are performed. 
The order may be LIFO(Last In First Out) or FILO(First In Last Out). LIFO implies that the element that is inserted last, 
comes out first and FILO implies that the element that is inserted first, comes out last.

What is Queue Data Structure?
A Queue is defined as a linear data structure that is open at both ends and the operations are performed in First In First Out (FIFO) order.

What is Recursion? 
The process in which a function calls itself directly or indirectly is called recursion and the corresponding function is called a recursive function. 

What is a recursive method in DSA?
Recursion is a process in which the function calls itself indirectly or directly in order to solve the problem.

Recursive sorting refers to the application of sorting algorithms that use recursive techniques to efficiently sort a collection of items. 

what is tree? 
 tree data structure is a hierarchical structure that is used to represent and organize data in a way that is easy to navigate and search. It is a collection of nodes that are connected by edges and has a hierarchical relationship between the nodes. 

The topmost node of the tree is called the root, and the nodes below it are called the child nodes. Each node can have multiple child nodes, and these child nodes can also have their own child nodes, forming a recursive structure.


what is binary tree?
A Binary Search Tree (BST) is a special type of binary tree in which the left child of a node has a value less than the node’s value and the right child has a value greater than the node’s value.

The root of a BST is the node that has the smallest value in the left subtree and the largest value in the right subtree. Each left subtree is a BST with nodes that have smaller values than the root and each right subtree is a BST with nodes that have larger values than the root.

what is heaps?

Heap sort is a comparison-based sorting technique based on Binary Heap data structure. It is similar to the selection sort where we first find the minimum element and place the minimum element at the beginning. Repeat the same process for the remaining elements



1. Arrays (Insertion and Deletion Operations):
   - How does the insertion operation in an work?
     - The insertion operation in an array involves adding a new element at a specified position in the array while shifting the existing elements, if necessary, to accommodate the new element.

   - What is the time complexity of inserting an element in an array at the end?
     - The time complexity of inserting an element at the end of an array is O(1) on average. This is because no shifting of existing elements is required, and the new element can be added directly to the end.

   - Explain the process of deleting an element from an array.
     - Deleting an element from an array involves removing a specific element from the array and shifting the remaining elements to fill the gap left by the deleted element.

   - Discuss the time complexity of the deletion operation in an array.
     - The time complexity of the deletion operation in an array is O(n) on average. This because, in the worst-case scenario, if the element to be deleted is at the beginning of the array, all the subsequent elements need to be shifted.

2. Searching Techniques (Linear and Binary Search):
   - Differentiate between linear and binary search algorithms.
     - Linear search involves sequentially checking each element in a list until the desired element is found or the end of the list is reached. Binary search, on the other hand, is a divide-and-conquer algorithm that works on sorted arrays by repeatedly dividing the search interval in half.

   - What is the time complexity of linear search? What about binary search?
     - The time complexity of linear search is O(n) as it may need to iterate through all elements in the worst-case scenario. The time complexity of binary search is O(logn) because it halves the search space in each step.

   - Explain the working of binary search and its prerequisite on the array being sorted.
     - Binary search works by comparing the middle element of the array with the target element and continuously narrowing down the search interval until the element is found or the interval is empty. The array must be sorted for binary search to work correctly.

   - When would you choose to use linear search over binary search, and vice versa?
     - Linear search is preferred when the list is unsorted and when there is a need to find the first occurrence of an element. On the other hand, binary search is suitable for sorted lists and provides a faster search in larger datasets.

3. Sorting Techniques (Bubble, Selection, and Insertion Sort):
   - How does bubble sort algorithm work? Can you explain its time complexity?
     - Bubble sort works by repeatedly swapping adjacent elements if they are in the wrong order. The time complexity of bubble sort is O(n^2) in the average and worst cases.

   - Compare and contrast the time complexity of selection sort and insertion sort.
     - Both selection sort and insertion sort have average and worst-case time complexities of O(n^2). However, insertion performs better when the list is almost sorted, while selection sort always takes the same time, regardless of the input.

   - Explain the process of sorting an array using the insertion sort technique.
     - Insertion sort builds a sorted array one element at a time by taking one element from the input data and comparing it with the elements in the sorted list until it finds its correct position.

   - Under what circumstances would you choose one sorting algorithm over another?
     - The choice of sorting algorithm depends on the nature of the data to be sorted. For small datasets or nearly sorted lists, insertion sort may be preferred, while for large datasets, quicksort or mergesort may be more suitable.

These are the answers to the first set of viva questions. If you would like me to continue providing answers to the remaining questions or have specific topics in mind, please feel free to let me know!  






